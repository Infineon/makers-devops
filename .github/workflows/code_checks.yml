name: Code Quality Checks

on:
  workflow_call:
    inputs:
      project-yaml:
        required: true
        type: string
        description: 'Project Yaml file that consists of build and check configurations'
      user-yaml:
        required: true
        type: string
        description: 'User Yaml file with list of build and checks to be executed'

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-24.04

    container:
      image: docker.io/ifxmakers/makers-docker:latest

      # image: ghcr.io/infineon/makers-docker:latest
      # credentials:
        # username: ${{ github.actor }}
        # password: ${{ secrets.github_token }}

      volumes:
        - .:/myLocalWorkingDir:rw
      options: --cpus 1

    steps:
      - name: Checkout repository 
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set strategy matrix
        id: set-matrix
        run: |
          eval $(python3 extras/makers-devops/tools/code_checks/codeChecks.py --projectYAML "${{ inputs.project-yaml }}" --userYAML "${{ inputs.user-yaml }}" --getAllCodeChecks)

      - name: Append Code Checks Output to Summary
        run: |
          echo "## ðŸ“œ Code Quality Report" >> $GITHUB_STEP_SUMMARY

    outputs:
      checks: ${{ steps.set-matrix.outputs.checks }}
      

  codeChecks:
    runs-on: ubuntu-24.04
    needs: setup

    container:
      image: docker.io/ifxmakers/makers-docker:latest

      # image: ghcr.io/infineon/makers-docker:latest
      # credentials:
        # username: ${{ github.actor }}
        # password: ${{ secrets.github_token }}

      volumes:
        - .:/myLocalWorkingDir:rw
      options: --cpus 1

    strategy:
      fail-fast: false

      matrix:
        checks: ${{ fromJson(needs.setup.outputs.checks) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true
          fetch-depth: 0

      - name: Run all code checks
        id: run_build
        run: |
          echo "Workflow has these parameters :"
          echo "matrix.checks   : ${{ matrix.checks }}"
          echo ""

          python3 extras/makers-devops/tools/code_checks/codeChecks.py --projectYAML "${{ inputs.project-yaml }}" --userYAML "${{ inputs.user-yaml }}" --runCheck ${{ matrix.checks }} > output.log

      - name: Archive code check reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.checks }}
          path: _results

      - name: Append Code Checks Output to Summary
        if: success() || failure()
        run: |
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          cat output.log >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

          
  GenerateAndUploadReports:
    runs-on: ubuntu-24.04
    if: success() || failure()
    needs: codeChecks

    container:
      image: docker.io/ifxmakers/makers-docker:latest

      # image: ghcr.io/infineon/makers-docker:latest
      # credentials:
        # username: ${{ github.actor }}
        # password: ${{ secrets.github_token }}
        
      volumes:
        - .:/myLocalWorkingDir:rw
      options: --cpus 1

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: _results

      - name: Generate Reports
        run: |
          extras/makers-devops/tools/code_checks/run_generate_reports.sh _results

      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: _results/html-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _results/html-report
          keep_files: false 

      - name: Display Report URL
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "**Deploying report to GitHub Pages**" >> $GITHUB_STEP_SUMMARY
          echo "[View Code Quality Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY
          echo "URL: $REPORT_URL"  # Also print it in logs for visibility
